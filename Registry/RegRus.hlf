.Language=Russian,Russian (Русский)
.PluginContents=Registry Browser Plugin

@Contents
$ #Registry Browser Plugin#

   ~Описание~@Description@

   ~Клавишные команды~@Keyboard@

   ~Копирование, перемещение и переименование~@CopyMove@

   ~Создание~@CreateNew@ и ~удаление~@Delete@ разделов и параметров

   ~Соединение с сетевым реестром~@Connect@

   ~Просмотр файлов формата .reg~@RegFiles@ и ~просмотр кустов (хайвов)~@Hives@

   ~Автоматический переход на GUID/ProgID~@LookUp@

   ~Прочие замечания~@Misc@

   ~Настройка~@Config@

@Description
$ #Описание#

Этот плагин к ФАРу позволяет производить над ключами (разделами, "ветками")
и параметрами ("листьями") реестра такие же манипуляции, как с каталогами и
файлами.

Плагин может работать в одном из двух ~режимов~@Modes@: "ключи как каталоги" и "ключи как файлы".
"Файлы-ключи" имеют стандартный формат .REG и экспортируются и
импортируются автоматически при их просмотре и редактировании. Экспорт и
импорт делается самим плагином, но можно и заставить его использовать REGEDIT.

Импорт-экспорт параметров (values) производится самим плагином через прямые
операции с файлами. Для строковых параметров завершающий нуль отсекается
при экспорте и добавляется при импорте. Многострочные "multi-string" параметры
при редактировании конвертируются в набор строк, разделённых символами CR/LF
и (по окончании) обратно.

Значения всех параметров, а также для ключей - их параметров по умолчанию,
показываются в стандартном столбце описаний. При этом двоичные параметры
приводятся к читабельному виду. В большинстве случаев
эти параметры можно редактировать так же, как описания файлов. Кроме того,
символические ссылки тоже показываются в столбце описаний.
В соответствующем столбце показываются владельцы ключей, как у файлов.

Переопределены три режима панелей: 3, 6 and 7.

Всё можно посмотреть "методом тыка", нажимая F3 или F4 на ключе или параметре.

В плагин можно войти с командной строки или меню пользователя через
префикс #reg:#, например:

@-
C:\>#reg:HKEY_CURRENT_USER\Software\Far#
@+

Плагин также умеет открывать файлы #.reg# и делать с ними в точности такие 
же операции, правда, только для чтения. Подробности ~здесь~@RegFiles@.

На 64-битных версиях Windows можно использовать префиксы #reg32:# и #reg64:#, что позволяет
войти в нужное место реестра из командной строки независимо от платформы FAR. 

Можно также открывать и сохранять ~"кусты" (hives)~@Hives@.

#Основные преимущества перед regedit#

@-
1. Работа с ключами как с текстовыми файлами с помощью встроенного
   редактора Фара или любого текстового редактора (через ассоциации)
   с автоматическим экспортом-импортом.
2. Интеграция с FAR'ом: копирование ключа на вторую панель,
   сортировка, quick view на другой панели, шорткаты и т.п.
   Например, ключи можно сортировать по дате их создания, или по
   "параметрам по умолчанию" (default values).
   Можно открыть в редакторе несколько ключей сразу и сделать
   глобальную замену, даже с регулярными выражениями (если установлен
   соответствующий плагин).
3. Переход на ключ, путь к которому был взят откуда-то в клипборд
   (по cd), быстрый переход на ранее запомненный ключ через меню
   пользователя FAR или клавишные макросы.
4. Одновременный показ параметров по умолчанию для всех ключей. Показ
   числовых параметров в читабельном виде.
5. Показ владельца ключа, автообновление панели,
   экспорт в двоичном виде.
6. Изменение типа параметра.
7. Можно экспортировать ключи с удаленного компьютера в файл .reg.
8. Длинные операции экспорта-импорта можно прервать клавишей Esc.
9. Работа с файлами .reg и хайвами как с системным реестром.

@+
~Примечание.~ Плагин работает даже корректнее, чем родной Regedit!
Попробуйте сделать Regedit'ом следующее: экспортировать ключ со строковым
параметром, содержащим символы "возврат каретки/перевод строки", затем
удалить этот параметр и импортировать этот ключ снова. Этот параметр
будет утерян! Теперь сделайте то же с помощью этого плагина
при выключенной установке "Использовать Regedit.exe"...

@+

@Keyboard
$ #Клавишные команды#

В дополнение к стандартным клавишам FAR'а, Registry Browser предоставляет
и свои собственные клавиши:

@-
#Ctrl-A#    Если нажата на параметре - Просмотр/изменение
          ~типа параметра~@ChType@.
          Если нажата на ключе - Запустить системный редактор прав
          доступа для даного ключа (диалог GUI).
#Ctrl-G#    Поместить параметр из столбца описаний в командную строку.
            Иногда это полезно для автоматического ~быстрого поиска~@LookUp@.
#Ctrl-Z#    Редактировать параметр из столбца ~описаний~@ChValue@.
#Ctrl-N#    Переключить показ двоичных параметров в столбце описаний:
            16-рич./десятич. число - для четырехбайтовых параметров,
            16-рич./строка ASCII - для прочих нестроковых параметров.
#Ctrl-H#    Спрятать/показать описания и владельцев ключей. Это может
            существенно ускорить перечитывание таких каталогов, как
            HKCR, поскольку плагин не будет открывать каждый ключ,
            чтобы посмотреть его параметр по умолчанию и информацию
            о безопасности.
#Ctrl-J#    ~Прыгнуть на Regedit~@RegJump@
#Shift-Enter# ~Прыгнуть на Regedit~@RegJump@
#Shift-F1#  Перейти на HKEY_CURRENT_USER\Software\Far
            (или ...\Far2 для юникодной версии).
#Shift-F2#  Перейти на HKEY_LOCAL_MACHINE\Software\Far
            (или ...\Far2 для юникодной версии).
#Ctrl-Shift-F1#  Вызвать меню ~Избранное~@FavMenu@
#Ctrl-Shift-F2#  Переход между HKEY_LOCAL_MACHINE и HKEY_CURRENT_USER
                   на тот же ключ, что и текущий
#Shift-F3#  На 64-битных системах - переход на альтернативный реестр
            (на 32-битном плагине - 64-битный, на 64-битном - 32-битный)
#Shift-F6#  Переименовывает ключ или значение под курсором.
#Shift-F7#  Переключает между ~режимами~@modes@ "Ключи как файлы" и
            "Ключи как каталоги".
#Alt-Shift-F3# Просмотреть группу выделенных ключей в одном вьюере.
#Alt-Shift-F4# Редактировать группу выделенных ключей в одном
               редакторе.

Примечания.
1. Alt-Shift-NumPad5 работает как Alt-Shift-F3.
2. Alt-Shift-F4 полезно, если вы хотите отредактировать отдельный
параметр в формате .reg вместо "сырого", не редактируя весь ключ.
3. Alt-Shift-F3 и Alt-Shift-F4 #не# используют Regedit.exe, даже если
опция "Использовать Regedit" включена.

@WinError
$ #Ошибка Windows#

Это сообщение показывается Registry Browser'ом, когда происходит какая-либо
ошибка Windows.

Текст сообщения берется у Windows. На невнятные сообщения об ошибках
просьба не пенять: что система дает, то и показываем.

@ChValue
$ #Изменить параметр#

По Ctrl-Z можно поменять параметры, видимые в столбце Descriptions.

Если это строковый параметр, просто наберите новую строку.

Если плагин находится в режиме hex дампа, включаемом по Ctrl-N, и этот
параметр двоичный, DWORD или QWORD, то можно редактировать дамп. При этом
вводить можно только коды байтов, разделенные пробелами или запятыми.

Если плагин находится в режиме показа чисел, и этот параметр типа
DWORD или QWORD, введите новое десятичное число. Двоичные параметры
редактировать в этом режиме нельзя.

Если по Ctrl-Z введен для данного ключа параметр по умолчанию, и он ранее
не существовал, то его тип устанавливается в строковый (REG_SZ).

Если при редактировании параметра по умолчанию по Ctrl-Z введена пустая
строка, то параметр по умолчанию вообще удаляется. (Если вы хотите его оставить,
но сделать пустым, редактируйте (Default) внутри этого ключа).

@ChType
$ #Изменить тип параметра#

В этом диалоге можно изменить тип текущего параметра реестра.

Он также показывается при создании нового значения для задания его типа.

Когда этот диалог открывается, в нём уже изначально выбран текущий
тип параметра. Таким образом, эту команду можно использовать просто для
узнавания типа параметра.

#Не меняйте тип параметра, если вы не знаете точно, что вы делаете!#

Примечание: эта команда работает только на одиночных параметрах. Групповые
операции не производятся.

@-
Возможные типы:
---------------
 None                     Тип параметра не определен.
 String                   Строка, оканчивающаяся null'ом.
 Expanded String          Строка, оканчивающаяся null'ом и содержащая
                          нераскрытые ссылки на переменные окружения
                          (напр., "%PATH%").
 Binary                   Двоичные данные любого вида.
 DWORD                    32-битное число (в формате little-endian).
 DWORD Big Endian         32-битное число в формате big-endian.
 Link                     Символический линк в Unicode.
 Multi-String             Цепочка строк, оканчивающихся null'ом,
                           в конце - два null'а.
 Resource List            A device-driver resource list
                           in the resource map.
 Full Resource Descriptor Resource list in the hardware description.
 QWORD                    64-битное число (в формате little-endian).
@+

@Modes
$ #Режимы работы#
 Плагин может работать в одном из двух режимов, переключаемых по #Shift-F7#:

#Ключи как файлы.# Ключи визуально отличаются от переменных, только если включен
показ размера, который для ключей равен 0. Ключи можно просматривать через
quick view на второй панели. Кроме того, в этом режиме ключи можно
редактировать, используя альтернативный редактор, назначенный на Alt-F4;
также работают Ctrl-Shift-F3 и Ctrl-Shift-F4.

  Недостатки: из-за того, что Фар не дает перехватить Ctrl-PgDn, эта кнопка
не работает, вернее, работает как на файле. Поэтому входить в каталоги-ключи
можно только через Enter или команду cd. Кроме того, неудобно различать
ключи и параметры.

#Ключи как каталоги#. Здесь работает Ctrl-PgDn, ключи выделяются цветом согласно
раскраске файлов и при сортировке идут _перед_ параметрами. Редактирование(F4) и
просмотр(F3) работают так же, как в режиме "ключи=файлы", но Ctrl-Shift-F3,
как всегда для каталогов, показывает суммарный размер его "файлов"-параметров.
Этот же размер показывается и в режиме QuickView.

В большинстве случаев рекомендуется режим "Ключи как каталоги".

@CopyMove
$ #Копирование, перемещение и переименование#
#Копирование#
Любое имя, введенное в диалоге копирования и не являющееся именем
каталога, считается именем файла, и ключ или параметр экспортируется в
файл с этим именем. Если выбрано более одного элемента на панели,
копировать в файл нельзя. Если вы поместили в конце строки '\' , она
считается именем каталога. Несуществующий каталог создается
автоматически.

Ключи всегда экспортируются как файлы .reg, а не как деревья файлов-
параметров, даже в режиме "ключи как каталоги".

Ключи можно экспортировать в обоих форматах файлов .reg - более старом REGEDIT4
и более новом Unicode, который появился начиная с Windows 2000.
По умолчанию формат экспорта соответствует версии плагина (ANSI или Unicode),
но в диалоге копирования его можно поменять.

Плагин сам генерирует файлы .reg, но его можно заставить использовать regedit.exe,
подробности см. в ~настройке~@Configuration@.

Можно копировать параметры (но не ключи) на другую панель реестра.
Чтобы скопировать ключ в другое место реестра, откройте его в редакторе по F4
и сделайте глобальную замену его имени.

Локальные ключи можно сохранять как ~"hives"~@Hives@.

#Перемещение#
Пока не реализовано. Вместо этого копируйте и затем удаляйте.

#Переименование#
Для переименования ключа или значения нажмите Shift-F6. На Windows 2000 переименование ключей не поддерживается;
можно использовать быстрый запуск Regedit по ~Ctrl-J~@RegJump@ и переименовать в нём.

@CreateNew
$ #Создание новых ключей и параметров#

По клавише F7 можно создавать пустые ключи, как обычные каталоги.

Новые параметры можно создавать либо нажав Shift-F4, указав имя нового
параметра и затем редактируя его, либо копируя ранее созданный файл с тем же
именем прямо в реестр.

Если импортируемый файл имеет формат .REG (начинается со стандартной
сигнатуры REG-файлов), то имя файла значения не имеет, и импортирование
делается согласно содержимому файла.

#Внимание!# Из кодовых страниц, выбираемых в диалоге по Shift-F4,
юникодная версия плагина (FAR 2.00+) понимает ANSI, Unicode и UTF-8. Все другие
страницы импортируются как ANSI, что может привести к некорректному сохранению.

По окончании редактирования нового параметра показывается ~диалог выбора типа~@ChType@, чтобы
выбрать тип этого параметра. 

Если тип, выбранный в этом диалоге, - #DWORD#, и данные в параметре
представляют собой строку ASCII с числом, эта строка преобразовывается
в двоичный вид. Число может быть десятичным, восьмеричным или шестнадцатеричным.
Восьмеричное число должно начинаться на '0', шестнадцатеричное - на '0x'.
Если строка содержит недопустимые символы, она считается двоичными данными
и не преобразуется. Если параметр содержит двоичные данные, и его значение
отлично от 4 (что является правильным размером DWORD), плагин предлагает
либо исправить это, либо так и записать значение с некорректной длиной в 
реестр.

Тип нового значения всегда можно изменить позднее командой ~Ctrl-A~@ChType@,
или используя Alt-Shift-F4 для его редактирования в формате .reg.

Если несколько файлов импортируются как новые параметры, их типы
определяются автоматически. Если параметр или пустой, или содержит
управляющие символы (кроме 0A и 0D), то его тип - двоичный, иначе он 
строковый.

@Delete
$ #Удаление ключей и параметров#

На удаление ключа подтверждение запрашивается только #один раз#, как на
обычный файл. (Так делает и regedit, кстати.)

Если удаляется раздел первого уровня под HKEY_LOCAL_MACHINE or HKEY_USERS,
то выгружается его куст.

@Connect
$ #Подключение к сетевому реестру#

Можно подключиться к реестру удаленного компьютера через командную строку:

 #reg:\\hostname#, или
 #reg:\\hostname\keypath# - не из плагина,
 #cd \\hostname#, или
 #cd \\hostname\keypath# - из плагина.

Можно использовать // вместо \\. Имейте в виду, что не все имена корневых
ключей, допустимые локально, будут работать по сети. Как правило, допускаются
HKEY_LOCAL_MACHINE и HKEY_USERS, но в некоторых случаях могут работать и остальные.

Для возврата в локальный реестр используйте префикс \\\ or ///, т.е.,
укажите пустое имя хоста.

Чтобы пользоваться этой возможностью, вы должны уже иметь установленную связь
с удаленным компьютером. Плагин не умеет подсоединяться сам и запрашивать
имя и пароль. Для установки соединения используйте "net use", другие плагины
или Network Neighborhood.

На удалённом компьютере должна быть запущена служба удаленного реестра.
Если на одной из машин установлен файрволл, он также должен быть сконфигурирован
соответствующим образом.

@RegJump
$ #Команда "Прыгнуть на Regedit"#

Ctrl-J открывает Regedit и прыгает в нём прямо на текущий ключ и параметр.
Это может оказаться полезным:
- для более быстрого поиска;
- для переименования ключей и параметров;
- для удобного редактирования параметров в двоичном виде.

@Misc
$ #Прочие замечания#

#Поиск (Alt-F7).# Даже когда на панели ключи считаются файлами, при поиске они
всё равно каталоги. Поиск подстроки ищет подстроку только в значениях
параметров, а не в их именах. Двоичные значения берутся физические, а
не форматированные в шестнадцатеричную строку.

Хоть поиск в реестре через плагин и возможен, вы можете предпочесть 
использовать для поиска REGEDIT. Такой поиск работает быстрее, поскольку 
FAR при поиске экспортирует каждый параметр из реестра в файл, открывает 
этот файл и ищет в нём, и проделывает всё это с каждым параметром.
REGEDIT можно всегда вызвать на текущей ветке, используя команду
~Прыгнуть на Regedit~@RegJump@ (Ctrl-J).

Поддерживается команда #cd#. Понимаются как полные имена корневых хэндлов
(HKEY_CURRENT_USER), так и сокращенные (HKCU), они case-insensitive.
Имена ключей в этой команде могут быть также заключены в кавычки или квадратные 
скобки.
Кроме того, этой командой можно переходить напрямую на ключи ~GUID/ProgID~@LookUp@.
Этой же командой можно открывать и файлы ~.reg~@RegFiles@ и ~"хайвы" ("кусты")~@Hives@.

В плагине переопределены три режима панелей - 3, 6 и 7.

С ключом HKEY_PERFORMANCE_DATA плагин не работает: данные там сложно форматированы и в двоичном
виде малополезны). Используйте отдельные утилиты, такие как perfmon.

Установки и последний текущий путь запоминаются перед выходом из плагина.

Показываются также владельцы ключей (Owner), если включен режим показа описаний ключей.

@Config
$ #Настройка#

 Можно управлять следующими параметрами настройки.

#Добавить в меню дисков#  Если включено, плагин вставляет себя
                        в меню дисков (Alt-F1/Alt-F2).

#Клавиша доступа ('1'-'9')#  Клавиша, которую вы хотите назначить
                           плагину в меню дисков (только для FAR 1).

#Добавить в меню внешних модулей#  Выключите, если не хотите, чтобы
                           плагин появлялся в меню по F11.

#Специальные режимы панелей#  Можно изменить раскладку панелей для
                     трех режимов. См. ~помощь FAR'а~@:PanelViewModes@ за подробностями.

#Использовать Regedit.exe#  Если включено, то все операции
                     экспорта-импорта ключей из реестра производятся
                     через запуск Regedit'а. Тогда их нельзя будет
                     прерывать Esc'ом, и, кроме того, они будут
                     занимать больше времени. Включайте эту опцию,
                     только если вы заподозрите какие-нибудь
                     проблемы во встроенном экспорте-импорте.

#Открывать файлы#      Если включено, то этот плагин может заходить
                     в файлы формата ~.reg~@RegFiles@ и ~хайвы~@Hives@. В противном случае
                     плагин их не будет открывать, оставляя другим
                     желающим возможность это сделать.

#Пропускать сообщения об отказе в доступе#   Если включено, ошибки
                     "Отказано в доступе" всегда игнорируются
                     и сообщения не показываются.
@RegFiles
$ #Работа с файлами .reg#

Плагин умеет открывать файлы типа #.reg# обоих форматов - более старого REGEDIT4 (ANSI)
и более нового юникодного (который введен начиная с Win2000). Войдя в .reg,
вы можете всё просматривать в точности так же, как
в обычном реестре, и делать точно те же операции с ветвями и параметрами.

Из файлов .reg можно экспортировать отдельные ветви и параметры в другие 
файлы и даже импортировать (с панели на панель) в системный реестр.
В последнем случае расположение ветви вы изменить не можете, т.е. ветвь
переносится в системный реестр на то же место, которое в ней записано.

Плагин #не умеет изменять# файлы .reg, т.е. редактировать или удалять ветви 
и параметры или "импортировать" в него.

Файлы .reg можно открывать, нажав на них #Enter# или #PgDn#. Никакой другой
установленный плагин не должен уметь их открывать, иначе Registry Browser
может и не получить управление от FAR'а. Кроме того, через меню
конфигурации можно отучить Registry Browser открывать файлы, давая
возможность сделать это другому плагину.

После установки плагина нажатие Enter на файле .reg уже не будет его запускать (т.е.,
выполнять над ним Regedit); для запуска используйте Shift-Enter или
Ctrl-Enter,Enter. В некоторых случаях (напр., запуск .reg прямо из архива)
можно пользоваться только Shift-Enter.

При открытии файла .reg плагин проходит на максимальную глубину имеющегося
в нём дерева до "распутья", то есть автоматически двигается вглубь,
пока не дойдет до ветки, из которой отходит более одного параметра или ветки.
Таким образом вам не нужно будет по сто раз нажимать "вниз, энтер".

Можно также открывать любой файл .reg с командной строки и даже переходить 
оттуда на указанную ветку. В последнем случае используйте двоеточие для 
отделения имени файла от пути в реестре. Например:

@-
C:\>#reg:c:\temp\software.reg#
@+

просто откроет файл software.reg и пройдет в нём до "распутья", а

@-
C:\>#reg:c:\temp\software.reg:HKEY_CURRENT_USER\SOFTWARE\Microsoft#
@+

еще и перейдет в указанную ветку.

Закладки FAR'а здесь тоже работают, включая полный путь внутри файла.

При открытии больших файлов .reg (более 1M) показ описаний ключей 
автоматически отключается, поскольку он сильно замедляет работу. Его можно 
включить, как обычно, нажатием Ctrl-H.

@Hives
$ #Хайвы (hives), или кусты#

Плагин умеет сохранять и просматривать "хайвы" (hives) реестра, которые
в русской версии Windows называются "кустами".

#Хайв# - это двоичный файл, используемый для хранения ключей реестра. Это
родной формат для реестра Windows.
Такие файлы можно создавать самому, ~копируя~@CopyMove@ ключ в файл при переключателе
#Экспортировать ключи как#, выставленном в положение #Двоичные файлы ("кусты")#.
 
Хайвы - это файлы под каталогом system32\config и файл ntuser.dat под каталогом пользователя.
В их начале есть сигнатура "regf".

Данная версия позволяет редактировать в хайвах только одиночные параметры.
Прочие операции редактирования (удаление, импорт и т.д.) пока не поддерживаются.

Плагин не занимается разбором хайвов сам, а пользуется сервисом 
операционной системы для загрузки хайва в качестве временного ключа. Это 
такая же операция, что и команда #Загрузить куст# в regedt32. При закрытии 
файла (выходе) хайв автоматически выгружается.

Внимание! При открытии больших файлов-хайвов один из файлов вашего системного
реестра может сильно увеличиться, а после выгрузки хайва он так и остается
большим! Я проверял это только один раз, но было именно так...

#Примечание:# для использования этой возможности в Vista/Win7/Win8/Win10 со включённым контролем
учётных записей пользователей (UAC) надо запустить FAR от имени администратора.

@LookUp
$ #Переход на GUID/ProgID#
Плагин умеет автоматически заглядывать в определенные места реестра для 
нахождения ключей некоторых видов, так что нет необходимости указывать к 
ним полный путь.

Если вы указываете GUID в качестве параметра команды #cd# или префикса #reg:#,
например, набираете
@-
#reg:{05589FA0-C356-11CE-BF01-00AA0055595A}#,
@+
то наличие этого ключа проверяется под следующими ключами (последовательно):

@-
 HKEY_CLASSES_ROOT\CLSID
 HKEY_CLASSES_ROOT\TypeLib
 HKEY_CLASSES_ROOT\Interface
 HKEY_CLASSES_ROOT\Component Categories
 HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class
 HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\DeviceClasses
@+

Если он найден под одним из них, вы переходите прямо в этот ключ.

Можно также набрать любой ProgID, и если он будет находиться в HKEY_CLASSES_ROOT,
вы перейдете на него. Фактически любое имя, в случае неудачной попытки перехода
на него из текущего ключа, будет проверяться на наличие в этих двух местах.
Это можно использовать для быстрого нахождения расширений файлов: напр.,
попробуйте #reg:.txt#.

Теперь, если в столбце описаний находится GUID или ProgID, может пригодиться
следующая последовательность клавиш:
@-
cd <Ctrl-G><Enter>
@+
которая перенесет вас прямо в соответствующий ключ.

Эту возможность можно использовать для доступа к удалённому реестру
двумя способами: либо
@-
#reg:\\server1#
#cd {05589FA0-C356-11CE-BF01-00AA0055595A}#
либо сразу
#reg:\\server1\{05589FA0-C356-11CE-BF01-00AA0055595A}#

@FavMenu
$ #Меню "Избранное"#
Меню "Избранное" состоит из содержимого меню "Избранное" Regedit'а.

@-
Редактирование:
#Ins#   Добавить текущий ключ к избранным
#Del#   Удалить выбранный ключ из избранных
@+

Примечание: сетевой реестр не может быть добавлен в Избранное, поскольку Regedit такого не понимает.
