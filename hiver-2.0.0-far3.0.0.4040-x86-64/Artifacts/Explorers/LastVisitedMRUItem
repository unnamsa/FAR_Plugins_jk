--!RE:/.*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU\\[a-z]/

local EHDR = "LastVisitedMRU Explorer"

local ffi = require "ffi"
local GUID, hInstA, hInstP, sTmpFile, sArg1, xArg2 = ... 

-- The type of the value MUST be binary
if  not(type(xArg2) =="table")  or  not(type(xArg2[1]) == "string")  then
    far.Message("Invalid argument2 type", EHDR.." ERROR")
end

local nDataLen = #xArg2[1]                               -- Length of the data buffer
local wsName   = ffi.cast ("wchar_t*", xArg2[1])         -- Prepare to calculate the item name length
local nItmBgn  =(ffi.C.wcslen(wsName) +1) *2             -- Calculate offset of the second string in the data buffer
local sItemNam = win.Utf16ToUtf8(string.char(string.byte(xArg2[1], 1, nItmBgn-2)))  -- Convert the item name into LUA string
local sItemArg = win.Utf16ToUtf8(string.char(string.byte(xArg2[1], nItmBgn+1, nDataLen)))  -- Extract the item location

-- Open the output file
local hTmp  = assert(io.open(sTmpFile, "a+"))
if    hTmp    then
    hTmp:write (string.format("; 0x%08x; %5d; %3d; %-64s; %s\n", 0, nDataLen, 0, sItemNam, sItemArg))

    -- Close the TMP-file
    hTmp:close()
else
    return far.Message("Error opening TmpFile", EHDR.." ERROR")
end
return  true
